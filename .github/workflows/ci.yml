name: CI Workflow Event Food Service Frontend

on:
    push:
        branches:
            - main
            - spike/deployment
            - spike/store-formdata-in-web-storage
    pull_request:
        branches:
            - main

jobs:
    setup:
        runs-on: ubuntu-latest
        outputs:
            node-modules-cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Cache Node.js modules
              id: cache-deps
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies
              if: steps.cache-deps.outputs.cache-hit != 'true'
              run: npm ci

    lint:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Run ESLint
              run: npx eslint src/**/*.{ts,html}

    check-ts:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Check TypeScript
              run: npx tsc --noEmit

    prettier:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Run Prettier Check
              run: npx prettier --check .

    test:
        needs: setup
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Run Tests
              run: npx ng test --watch=false --browsers=ChromeHeadless

    build:
        needs: [lint, check-ts, prettier, test]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Build the project
              run: npx ng build --configuration=production

    build-and-push:
        needs: [build]
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Log in to GitHub Container Registry
              run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            - name: Determine Image Tag
              run: echo "IMAGE_TAG=pr-${{ github.event.pull_request.number || github.sha }}" >> $GITHUB_ENV

            - name: Define lowercase image name
              run: echo "IMAGE_NAME=$(echo ghcr.io/${{ github.repository_owner }}/ductus-event-food-service-app:${{ env.IMAGE_TAG }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

            - name: Build Docker image
              run: docker build -t ghcr.io/${{ env.IMAGE_NAME }} .

            - name: Push Docker image to GitHub Container Registry
              run: docker push ghcr.io/${{ env.IMAGE_NAME }}
